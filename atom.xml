<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://kangjun.github.io/</id>
    <title>MyBlog</title>
    <updated>2021-04-15T05:15:52.040Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://kangjun.github.io/"/>
    <link rel="self" href="https://kangjun.github.io/atom.xml"/>
    <subtitle>我的博客</subtitle>
    <logo>https://kangjun.github.io/images/avatar.png</logo>
    <icon>https://kangjun.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, MyBlog</rights>
    <entry>
        <title type="html"><![CDATA[前端面试题目（一）]]></title>
        <id>https://kangjun.github.io/post/qian-duan-mian-shi-ti-mu-yi/</id>
        <link href="https://kangjun.github.io/post/qian-duan-mian-shi-ti-mu-yi/">
        </link>
        <updated>2021-04-14T06:47:35.000Z</updated>
        <content type="html"><![CDATA[<p><strong>什么是闭包？</strong><br>
指有权访问另一个函数作用域中变量的函数</p>
<p><strong>null 和undefined的区别？</strong></p>
<p>共同点：都是原始类型，保存在栈中变量本地<br>
不同点：<br>
undefined:表示变量声明但示被赋值。是所有未赋值变量的默认值，不主动使用<br>
null:表示一个变量不再指向任何对象地址<br>
表示变量可能指向一个对象，但目前暂时什么也没指向，一般用来主动释放指向对象的引用</p>
<p><strong>常见行内元素和块级元素有哪些，他们有什么区别？</strong><br>
行内元素：span img a u s i input select<br>
块级元素：div ul ol li dt dd h1-h6<br>
块级元素会单独占一行，行内元素会在一行显示。</p>
<p><strong>什么是ajax？</strong><br>
ajax是一种在不需要重新加载页面的情况下与服务器进行数据交换、实现页面局部更新的一种技术。<br>
实质是使用核心对象XMLHttpRequest异步向服务器发送请求，实现页面局部数据刷新：<br>
如何创建XMLHttpRequest请求步骤：<br>
1、获取ajax对象<br>
var xhr=new XMLHttpRequest();<br>
2、创建请求:调用XMLHttpRequest对象的open方法<br>
xhr.open(&quot;get/post&quot;,&quot;xx.php&quot;,true[是否为异步])<br>
3、回调函数的处理<br>
xhr.onreadystatechange=function(){<br>
if(xhr.readyState<mark>4){<br>
if(xhr.status</mark>200){<br>
var txt=xhr.responseText/responseXML<br>
}<br>
}<br>
}<br>
4、发送请求<br>
xhr.send(&quot;name=value$pwd=value&quot;);<br>
readyState属性：<br>
0=未初始化<br>
1=正在加载<br>
2=以加载<br>
3=交互中<br>
4=加载完成</p>
<p>Ajax异步请求？<br>
<span class='katex-error' title='ParseError: KaTeX parse error: Expected &#039;}&#039;, got &#039;EOF&#039; at end of input: …e:&quot;post&quot;,
data:'>.ajax(
{
url:&quot;destination.php&quot;,
type:&quot;post&quot;,
data:</span>(&quot;#id&quot;).val(),<br>
dataType:&quot;json&quot;,<br>
success:function(data){<br>
console.log(data)<br>
}<br>
error:function(){<br>
window.alert(&quot;error&quot;)<br>
}<br>
}<br>
)</p>
<p><strong>AJAX的优缺点？</strong><br>
优点：<br>
页面局部刷新，提高用户体验<br>
减轻服务器负担<br>
具有更迅速的响应能力<br>
能被广泛支持</p>
<p>缺点：<br>
不支持浏览器后退按钮<br>
安全问题<br>
对搜索引擎支持比较弱</p>
<p>html中有哪些定位？<br>
static:默认规则定位。<br>
absolute:绝对定位 ，如果他的父级设置成了除static之外的定位方式，就会相对于他的父级定位，如果都没有，会相对于body定位、不占页面空间<br>
relative:相对定位，相对于初始位置定位/占页面空间<br>
fixed:固定定位，相对于浏览器窗口</p>
<p><strong>http</strong><br>
建立TCP连接<br>
发送请求命令<br>
发送请求头部<br>
服务器应答<br>
服务器发送应答头部<br>
服务器发送应答具体信息<br>
关闭连接</p>
<p><strong>如何居中DIV？</strong><br>
给DIV设置一个宽度，再设置margin为:0 auto;</p>
<p><strong>如何居中一个浮动元素？</strong><br>
使用一个居中显示的DIV包含些浮动元素。</p>
<pre><code>position:fixed;//固定定位
    width: 200px;
    height: 200px;
    background: red;
    margin-left:-100px;
    margin-top: -100px;
    left: 50%;
    top: 50%;
</code></pre>
<p><strong>纯CSS实现一个三角形？</strong><br>
width: 0;<br>
height: 0;<br>
border:25px solid transparent;<br>
border-top-color: red;</p>
<p><strong>重写trim()方法</strong><br>
if(String.prototype.trim===undefined){<br>
String.prototype.trim=function () {<br>
return this.replace(/^\s+|\s+$/g)<br>
}<br>
}<br>
var str=&quot; helloworld &quot;;<br>
document.write(&quot;|&quot;+str+&quot;|<br>
&quot;);<br>
str=str.trim();<br>
document.write(&quot;|&quot;+str+&quot;|&quot;);</p>
<p>function trim(str){//同时去掉开头和结尾的空字符<br>
var reg=/^\s+|\s+$/g;<br>
return str.replace(reg,&quot;&quot;);<br>
}<br>
var str=&quot; zhang dong &quot;;<br>
console.log(ltrim(str));//&quot;zhang dong &quot;<br>
console.log(rtrim(str));//&quot; zhang dong&quot;<br>
console.log(trim(str));//&quot;zhang dong&quot;</p>
<p><strong>水仙花数</strong><br>
var a,b,c<br>
for(var i=100;i&lt;1000;i++){<br>
a=parseInt(i%10);<br>
b=parseInt((i/10)%10);<br>
c=parseInt(i/100);<br>
if(i<mark>aaa+bbb+ccc){<br>
console.log(i);<br>
}<br>
}<br>
<strong>判断某一年是不是闰年</strong><br>
function isLeap(year){<br>
console.log(year%4</mark>0&amp;&amp;year%100!=0||year%400==0?&quot;闰年&quot;:&quot;平年&quot;);<br>
}<br>
isLeap(prompt(&quot;主输入年份&quot;));</p>
<p><strong>在单词后面加上数字</strong><br>
var str=&quot;one two three four&quot;;<br>
var i=4;<br>
var reg=/\b[a-z]+\b/g;<br>
str=str.replace(reg,function(kw){<br>
return kw+i++;<br>
})<br>
console.log(str);</p>
<p><strong>判断是不是数组</strong><br>
var str=[]<br>
Array.prototype.isPrototypeOf(str);//true<br>
Object.prototype.toString.call(str);//[Object Array];<br>
str instanceof Array;<br>
Array.isArray([])</p>
<p><strong>什么是继承？</strong><br>
父对象已有的成员，子对象不用重复定义，就可以直接使用</p>
<p><strong>什么是原型？</strong><br>
每个函数都有一个prototype属性，该属性引用的就是原型对象，<br>
原型对象就是保存共有属性和方法的对象</p>
<p><strong>window窗口的全局对象？</strong><br>
history<br>
navigator<br>
screen<br>
location<br>
event</p>
<p><strong>动态加载Dom?</strong><br>
var frg=document.createDocumentFragment();<br>
var m=document.createElement(&quot;div&quot;);<br>
m.innerHTML=&quot;this is first page&quot;;<br>
frg.appendChild(m);<br>
document.body.appendChild(frg);<br>
<strong>数组去重？</strong><br>
var arr=[1,2,3,3,4,&quot;a&quot;,&quot;a&quot;,&quot;b&quot;]<br>
function unique(arr){<br>
for(var i=0,arr2={};i&lt;arr.length;i++){<br>
arr2[arr[i]]===undefined&amp;&amp;(arr2[arr[i]]=1);</p>
<p>}</p>
<p>var arr=[];<br>
for(var key in arr2){<br>
arr.push(key)<br>
}<br>
return arr;<br>
}<br>
console.log(unique(arr));</p>
<p>var arr1=[2,5,9,1,7]<br>
function sort(arr){<br>
for(var i=0;iarr[j+1]]){<br>
var temp=arr[j];<br>
arr[j]=arr[j+1];<br>
arr[j+1]=temp;<br>
}<br>
}<br>
}<br>
}<br>
sort(arr1);<br>
console.log(arr1)</p>
<p><strong>数组降维</strong><br>
var arr=[[1,2,3],[1,3,2]];<br>
var res=Array.prototype.concat.apply([],arr)<br>
console.log(res);</p>
<p><strong>如何理解HTML语义化？</strong><br>
可以让页面内容结构化，便于浏览器解析，提高代码的可维护度和可重用性<br>
常用的语义化标签：</p>
<p><strong>哪些属性可以继承？</strong><br>
font-size<br>
font-family<br>
color</p>
<p>display:none和visibility:hidden的区别？<br>
display不占据页面空间<br>
visibility仍然占据空间</p>
<p><strong>css3伪类选择器</strong><br>
:enabled<br>
:disabled<br>
:checked<br>
:firtt-child :last-child</p>
<p><strong>为什么建议在设置背景图像的同时还设置背景颜色？</strong><br>
如果因为各种原因图片无法加载的时候，页面会显示背景颜色。</p>
<p><strong>CSS sprite的优缺点？</strong><br>
把网页中的一些背景图片整合到一张图片中，再利用background-image/repeat/position进行图片定位<br>
优点：<br>
减少网页的http请求，提高性能<br>
减少图片的大小<br>
维护更方便，只需要在一张图片上修改就可以。</p>
<p>缺点：<br>
图片合成比较麻烦<br>
背景设置时需要得到每一个图片的精确位置</p>
<p>CSS3新特性<br>
box-shadow<br>
border-radius<br>
text-shadow</p>
]]></content>
    </entry>
</feed>